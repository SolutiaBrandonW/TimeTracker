//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataContracts.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TimeTrackingEntities : DbContext
    {
        public TimeTrackingEntities()
            : base("name=TimeTrackingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<assignment> assignments { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<role> roles { get; set; }
        public virtual DbSet<security_level> security_level { get; set; }
        public virtual DbSet<status> status { get; set; }
        public virtual DbSet<assignment_time> assignment_time { get; set; }
    
        public virtual int ArchiveProject(Nullable<long> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArchiveProject", project_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CreateAssignment(Nullable<long> project_id, Nullable<long> employee_id, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> role_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(long));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateAssignment", project_idParameter, employee_idParameter, start_dateParameter, end_dateParameter, role_idParameter);
        }
    
        public virtual ObjectResult<GetEmployeeBySecuritylevel_Result> GetEmployeeBySecuritylevel(string security_level_name)
        {
            var security_level_nameParameter = security_level_name != null ?
                new ObjectParameter("security_level_name", security_level_name) :
                new ObjectParameter("security_level_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeBySecuritylevel_Result>("GetEmployeeBySecuritylevel", security_level_nameParameter);
        }
    
        public virtual ObjectResult<GetHoursByProject_Result> GetHoursByProject(Nullable<long> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoursByProject_Result>("GetHoursByProject", project_idParameter);
        }
    
        public virtual int UpdateProjectStatus(Nullable<long> project_id, string status_name)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var status_nameParameter = status_name != null ?
                new ObjectParameter("status_name", status_name) :
                new ObjectParameter("status_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProjectStatus", project_idParameter, status_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetHoursByAssignment(Nullable<long> assignment_id)
        {
            var assignment_idParameter = assignment_id.HasValue ?
                new ObjectParameter("assignment_id", assignment_id) :
                new ObjectParameter("assignment_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetHoursByAssignment", assignment_idParameter);
        }
    }
}
